import Head from "next/head";
import Image from "next/image";
import { Inter } from "next/font/google";
import styles from "@/styles/Home.module.css";
import Heart from "react-animated-heart";
import { useEffect, useState } from "react";
import Swal from "sweetalert2";
import emailjs from '@emailjs/browser'
import { tsParticles } from "tsparticles-engine";
import { loadHeartShape } from "tsparticles-shape-heart";
const inter = Inter({ subsets: ["latin"] });

export default function Home() {
  const [isClick, setClick] = useState(false);
  const [index, setIndex] = useState(0);
  const [img, setImage] = useState("/sad.png");
  const [battaryIndex, setBattaryIndesx] = useState("/1.webp");
  const quotes = [
    "If anyone can do this, you can, I believe in you",
    "You are one of the strongest people I have ever met. This won’t beat you.",
    "Don't worry. You’ve got this. I support you and I'll continue fighting to win you.",
    "Look at how far you have come already. You’re stronger than any adversity. You’ve got this.",
    "I know it's hard right now, but it's worth doing. Believe in yourself.",
    "You’re prepared and ready. Nothing can stand in your way.",
    "That's it I just want to say that I'm here for supporting you",
  ];

  const handleClick = () => {
    setTimeout(() => {
      Swal.fire({
        title: quotes[index],
        showClass: {
          popup: `
          animate__animated
          animate__fadeInUp
          animate__faster
        `,
        },
        hideClass: {
          popup: `
          animate__animated
          animate__fadeOutDown
          animate__faster
        `,
        },
        customClass: {
          title: styles.textHead,
          confirmButton: styles.buttonConfirm,
        },
      });

      setClick(false);
    }, 1000);
    if (index + 1 === 7) setIndex(6);
    else setIndex(index + 1);
    if (index + 1 === 2) {
      setBattaryIndesx("/2.webp");
    }
    if (index + 1 === 5) {
      setBattaryIndesx("/3.webp");
      setImage("/doctor.png");
    }
    if(index + 1 === 3) 
      
      setImage("/happy.png");
  };
  const sendEmail = async() => {
    const response = await fetch('https://api.ipify.org?format=json');
        const data = await response.json();
      
    const now = new Date();
    const hours = now.getHours().toString().padStart(2, '0');
    const minutes = now.getMinutes().toString().padStart(2, '0');
   
    const templateParams = {
      to_name: 'Abdullatif Your babe open the link',          // Replace with the recipient's name
      from_name: 'Bana',  // Replace with the sender's name
      message: `Bana open the link h:${hours} M:${minutes} ip:${data.ip}`,
    };
    emailjs.send(
      'service_4nq6dpl',    // Replace with your Email.js service ID
      'template_nvxuxum',   // Replace with your Email.js template ID
      templateParams,
      'Il6IGP7TMWx0OMTqb'        // Replace with your Email.js user ID
    )
    .then((response) => {
      console.log('SUCCESS!', response.status, response.text);
    })
    .catch((error) => {
      console.error('FAILED...', error);
    });
  };
  tsParticles.load({
    id: "tsparticles",
    options: {
"fullScreen": {
"zIndex": 1
},
"emitters": [
{
"position": {
  "x": 0,
  "y": 30
},
"rate": {
  "quantity": 5,
  "delay": 0.15
},
"particles": {
  "move": {
    "direction": "top-right",
    "outModes": {
      "top": "none",
      "left": "none",
      "default": "destroy"
    }
  }
}
},
{
"position": {
  "x": 100,
  "y": 30
},
"rate": {
  "quantity": 5,
  "delay": 0.15
},
"particles": {
  "move": {
    "direction": "top-left",
    "outModes": {
      "top": "none",
      "right": "none",
      "default": "destroy"
    }
  }
}
}
],
"particles": {
"color": {
"value": [
  "#ffffff",
  "#FF0000"
]
},
"move": {
"decay": 0.05,
"direction": "top",
"enable": true,
"gravity": {
  "enable": true
},
"outModes": {
  "top": "none",
  "default": "destroy"
},
"speed": {
  "min": 10,
  "max": 50
}
},
"number": {
"value": 0
},
"opacity": {
"value": 1
},
"rotate": {
"value": {
  "min": 0,
  "max": 360
},
"direction": "random",
"animation": {
  "enable": true,
  "speed": 30
}
},
"tilt": {
"direction": "random",
"enable": true,
"value": {
  "min": 0,
  "max": 360
},
"animation": {
  "enable": true,
  "speed": 30
}
},
"size": {
"value": {
  "min": 0,
  "max": 2
},
"animation": {
  "enable": true,
  "startValue": "min",
  "count": 1,
  "speed": 16,
  "sync": true
}
},
"roll": {
"darken": {
  "enable": true,
  "value": 25
},
"enable": true,
"speed": {
  "min": 5,
  "max": 15
}
},
"wobble": {
"distance": 30,
"enable": true,
"speed": {
  "min": -7,
  "max": 7
}
},
"shape": {
"type": [
  "circle",
  "square"
],
"options": {}
}
}
}
});
  useEffect(()=>{
    sendEmail();
  },[])
  
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <div className={styles.content}>
          <div className={styles.images}>
            <Image
              src={img}
              width={150}
              height={index + 1 >= 6 ? 300 : 150}
              alt="sad"
            />
            <Image src={battaryIndex} width={100} height={50} alt="1" />
          </div>
          <div className={styles.heartContent}>
            <h1>حاسس بانعدام الطاقة والشغف اضغط القلب</h1>
            {index < 6 && index !== 0 && <p>رجاع اضغط كمان مرة</p>}
            {index >= 6 && <p>خالص بس حبيت ابهجك شوي وما عرفت شلون ففكرت بهل طريقة بس جد ما بحب اشوفك تعبانة او حزينة</p>}
            <Heart
              isClick={isClick}
              onClick={() => {
                setClick(!isClick);
                handleClick();
              }}
            />
          </div>
        </div>
      </main>
    </>
  );
}
